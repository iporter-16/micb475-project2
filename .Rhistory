daa_results_df_LinDA_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_edgeR <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_deseq <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "DESeq2", select = NULL, reference = NULL)
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Method", y = "Pathway", fill = "Detection") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers vs. nonsmokers")
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA_nonsmoking%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR_nonsmoking%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq_nonsmoking%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Method", y = "Pathway", fill = "Detection") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers vs. nonsmokers")
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA_nonsmoking%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR_nonsmoking%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq_nonsmoking%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Method", y = "Pathway", fill = "Detection") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers high vs. low LDL")
pca_plot_smoker
#### Nov 1, 2023 - SKA ####
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
# load abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#abundance_data$pathway = rownames(abundance_data)
#abundance_data = abundance_data[,-1]
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"),
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Generate pathway heatmap
feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
heatmap_smoker <- pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
heatmap_smoker
# Generate pathway PCA plot
pca_plot_smoker <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
pca_plot_smoker
pca_plot_LDL <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
pca_plot_LDL
# Generate pathway PCA plot
pca_plot_smoker <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")+ggtitle("PCA plot comparing smoking in all participants")
pca_plot_smoker
pca_plot_LDL <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")+ggtitle("PCA plot comparing LDL in all participants")
pca_plot_LDL
# Generate pathway PCA plot
pca_plot_smoker <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")+ggtitle("PCA plot comparing smoking in all participants")
pca_plot_smoker
pca_plot_LDL <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")+ggtitle("PCA plot comparing LDL in all participants")
setwd("/Users/porte16049/Desktop/MICB475/micb475-project2/pcoa_plots")
setwd("/Users/saman/Desktop/micb475-project2/pcoa_plots")
ggsave("pca_smoker_all.png"
, pca_plot_smoker
, scale=1)
ggsave("pca_smoker_all.png"
, pca_plot_smoker
, height=4, width=5)
ggsave("pca_LDL_all.png"
, pca_plot_LDL
, height=4, width=5)
#!/bin/R
#PURPOSE: From picrust2 analysis, produces PCA plots for smokers and nonsmokers
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Save plots. Only change wd to save plots! Keep commented ut
# setwd("/Users/porte16049/Desktop/MICB475/micb475-project2/pcoa_plots")
# ggsave("pca_all_LDL.png",PCA_total,scale=1)
# ggsave("pca_smokers_LDL.png",PCA_smok_LDL,scale=1)
setwd("/Users/saman/Desktop/micb475-project2")
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
# additional plots for smoker category only and LDL category only among all participants. SKA - Nov 7, 2023 #
pca_plot_smoker <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")+ggtitle("PCA plot comparing smoking in all participants")
# pca_plot_smoker
pca_plot_LDL <- pathway_pca(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")+ggtitle("PCA plot comparing LDL in all participants")
### Save plots. Only change wd to save plots! Keep commented ut
# setwd("/Users/porte16049/Desktop/MICB475/micb475-project2/pcoa_plots")
# ggsave("pca_all_LDL.png",PCA_total,scale=1)
# ggsave("pca_smokers_LDL.png",PCA_smok_LDL,scale=1)
setwd("/Users/saman/Desktop/micb475-project2/pcoa_plots")
ggsave("pca_smoker_all.png", pca_plot_smoker, scale=1)
ggsave("pca_LDL_all.png", pca_plot_LDL, scale=1)
setwd("/Users/saman/Desktop/micb475-project2")
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
gg_pcoa_wunifrac_LDL <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
### PCoA plot ###
# weighted unifrac
ord.weighted_unifrac <- ordinate(phyloseq_object_final, method="PCoA", distance="unifrac", weighted=TRUE)
gg_pcoa_wunifrac_LDL <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
ggsave("plot_pcoa_wunifrac_LDL.png"
, gg_pcoa_wunifrac_LDL
, height=4, width=5)
### Save plots ###
wd("/users/saman/Desktop/micb475-project2/pcoa_plots/beta_diversity")
### Save plots ###
cwd("/users/saman/Desktop/micb475-project2/pcoa_plots/beta_diversity")
### Save plots ###
setwd("/users/saman/Desktop/micb475-project2/pcoa_plots/beta_diversity")
### Save plots ###
setwd("/Users/saman/Desktop/micb475-project2/pcoa_plots/beta_diversity")
setwd("/Users/saman/Desktop/micb475-project2")
# Run pathway DAA for multiple methods
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
methods <- c("ALDEx2", "DESeq2", "edgeR")
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = metacyc_abundance %>% column_to_rownames("pathway"), metadata = metadata, group = "Environment", daa_method = method)
})
# Run pathway DAA for multiple methods
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
methods <- c("ALDEx2", "DESeq2", "edgeR")
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker", daa_method = method)
})
#### Nov 1, 2023 - SKA ####
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
# load abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#abundance_data$pathway = rownames(abundance_data)
#abundance_data = abundance_data[,-1]
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"),
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Run pathway DAA for multiple methods
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
methods <- c("ALDEx2", "DESeq2", "edgeR")
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker", daa_method = method)
})
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
dm_unweighted_unifrac <- UniFrac(phyloseq_object_final, weighted=FALSE)#unweighted unifrac
dm_bray <- vegdist(t(otu_table(phyloseq_object_final)), method="bray")#bray-curtis
dm_jaccard <- vegdist(t(otu_table(phyloseq_object_final)), method="jaccard")#jaccard
# permanova: smoker-fibre_category
adonis2(dm_weighted_unifrac ~ `smoker`*fibre_category, data=samp_dat_wdiv)#weighted unifrac
### Load packages
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% select(pathway, everything())
### Filter data to remove 0 standard deviation
row_sds_nonsmok <- abundance_data_nonsmoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok != 0, ]
row.names(filtered_LDL_nonsmok) <- NULL
row_sds_smok <- abundance_data_smoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_smok <- abundance_data_smoking[row_sds_smok != 0, ]
row.names(filtered_LDL_smok) <- NULL
# Run pathway DAA for multiple methods
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
methods <- c("DESeq2", "edgeR") #"ALDEx2"
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker", daa_method = method)
})
### Perform pathway differential abundance analysis (DAA) using LinDA method ###
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"),
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
### Run pathway DAA for multiple methods ###
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
methods <- c("DESeq2", "edgeR") #"ALDEx2"
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker", daa_method = method)
})
### Perform pathway differential abundance analysis (DAA) using LinDA method ###
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"),
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"),
metadata = metadata_smoking,
group = "fibre_category",
daa_method = "LinDA",
select = NULL, reference = NULL)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"),
metadata = metadata_nonsmoking,
group = "fibre_category",
daa_method = "LinDA",
select = NULL, reference = NULL)
# ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"),
metadata = metadata,
group = "smoker",
daa_method = "ALDEx2",
select = NULL, reference = NULL)
library(ALDEx2)
if (!requireNamespace("BiocManager", quietly = TRUE))
#### Nov 7, 2023 - SKA ####
#!/usr/bin/env Rscript
pkgs <- c("phyloseq", "ALDEx2", "SummarizedExperiment", "Biobase", "devtools",
"ComplexHeatmap", "BiocGenerics", "BiocManager", "metagenomeSeq",
"Maaslin2", "edgeR", "lefser", "limma", "KEGGREST", "DESeq2")
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE))
BiocManager::install(pkg)
}
#### Nov 7, 2023 - SKA ####
#!/usr/bin/env Rscript
pkgs <- c("phyloseq", "ALDEx2", "SummarizedExperiment", "Biobase", "devtools",
"ComplexHeatmap", "BiocGenerics", "BiocManager", "metagenomeSeq",
"Maaslin2", "edgeR", "lefser", "limma", "KEGGREST", "DESeq2")
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE))
BiocManager::install(pkg)
}
library(ALDEx2)
library(edgeR)
library(DESeq2)
### Run pathway DAA for multiple methods ###
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
methods <- c("ALDEx2", "DESeq2", "edgeR") #"ALDEx2"
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker", daa_method = method)
})
View(daa_results_list)
### Perform pathway differential abundance analysis (DAA) ###
# LinDA method
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"),
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
daa_results_df_smoking_fibre <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking_fibre <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking_LDL <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking_LDL <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_list_smoking_fibre <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category", daa_method = method)
})
daa_results_list_nonsmoking_fibre <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category", daa_method = method)
})
daa_results_list_smoking_LDL <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
})
daa_results_list_nonsmoking_LDL <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
})
print(daa_results_list)
print(daa_results_list$[[1]])
print(daa_results_list$1)
print(daa_results_list[[1]])
sig_feature_list <- lapply(daa_results_list, function(results_list) {
results_list %>% filter(p_values < 0.05)
})
View(sig_feature_list)
### Generate pathway heatmap using multiple methods###
# smokers only
# feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
sig_feature_list <- lapply(daa_results_list, function(results) {
results %>% filter(p_values < 0.05)
})
### Generate pathway heatmap using multiple methods###
# smokers only
# feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
sig_feature_list <- lapply(daa_results_list, function(results) {
results %>% filter(p_values < 0.05)
})
heatmap_list_smoker <- lapply(sig_feature_list, function(sig) {
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
})
View(heatmap_list_smoker)
heatmap_list_smoker[[1]]
heatmap_ALDEx2_smoker <- heatmap_list_smoker[[1]]
heatmap_ALDEx2_smoker
heatmap_DESeq2_smoker <- heatmap_list_smoker[[2]]
heatmap_edgeR_smoker <- heatmap_list_smoker[[3]]
heatmap_edgeR_smoker
heatmap_ALDEx2_smoker
heatmap_DESeq2_smoker
heatmap_edgeR_smoker
## smoking-fibre
sig_feature_list_smoking_fibre <- lapply(daa_results_list_smoking_fibre, function(results) {
results %>% filter(p_values < 0.05)
})
heatmap_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
})
heatmap_ALDEx2_smoking_fibre <- heatmap_list_smoking_fibre[[1]]
heatmap_DESeq2_smoking_fibre <- heatmap_list_smoking_fibre[[2]]
heatmap_edgeR_smoking_fibre <- heatmap_list_smoking_fibre[[3]]
heatmap_ALDEx2_smoking_fibre
heatmap_DESeq2_smoking_fibre
heatmap_edgeR_smoking_fibre
View(metadata_nonsmoking)
View(metadata_smoking)
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
#!/bin/R
#From picrust2 analysis, produces heatmaps of pathways signififantly (p<0.05 up or downregulated)
#in smoking and nonsmoking adults, displaying their fiber consumption (high or low)
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking <- select(abundance_data, metadata_smoking$"#SampleID")
abundance_data_smoking <- select(abundance_data, metadata_smoking$"#SampleID"=="Yes")
daa_results_df_smoking_fibre <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
View(abundance_data)
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
### Load packages
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
library(ALDEx2)
library(edgeR)
library(DESeq2)
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking <- select(abundance_data, rownames(metadata_smoking$`#SampleID`))
library(dplyr)
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking <- abundance_data %>% select(metadata_smoking$`#SampleID`)
abundance_data_smoking <- abundance_data %>% select(metadata_smoking$`#SampleID`)
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
library(dplyr)
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
