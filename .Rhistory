(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-6713",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-6944",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-6948",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-6957",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-6992",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-7084",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-7097",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-7098",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-7159",])
(abundance_data_nonsmoking[abundance_data_nonsmoking$pathway=="PWY-7644",])
#From picrust2 analysis, produces heatmaps of pathways signififantly (p<0.05 up or downregulated)
#in smoking and nonsmoking adults, displaying their fiber consumption (high or low)
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% select(pathway, everything())
# Perform pathway differential abundance analysis (DAA) using LinDA
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
feature_with_p_0.05_smok <- daa_results_df_smoking %>% filter(p_values < 0.05)
heat_smok <- pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05_smok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "fibre_category") +
ggtitle("Significant differential expression in smokers")
feature_with_p_0.05_nonsmok <- daa_results_df_nonsmoking %>% filter(p_values < 0.05)
heat_nonsmok <- pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% feature_with_p_0.05_nonsmok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "fibre_category") +
ggtitle("Significant differential expression in nonsmokers")
### LDL ###
# Perform pathway differential abundance analysis (DAA) using LinDA
daa_results_df <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking_LDL <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking_LDL <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap for LDL groups
feature_with_p_0.05_smok_LDL <- daa_results_df_smoking_LDL %>% filter(p_values < 0.05)
heat_smok_LDL <- pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05_smok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "LDL_category") +
ggtitle("Significant differential expression in smokers with high/low LDL")
feature_with_p_0.05_nonsmok_LDL <- daa_results_df_nonsmoking_LDL %>% filter(p_values < 0.05)
heat_nonsmok_LDL <- pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% feature_with_p_0.05_nonsmok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "LDL_category") +
ggtitle("Significant differential expression in nonsmokers with high/low LDL")
View(feature_with_p_0.05_smok_LDL)
heat_smok_LDL
### Pulling interesting data from the LDL smoking heatplot
interesting_pathways <- abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05_smok$feature)
View(interesting_pathways)
### Pulling the interesting unexpressed stuff
interesting_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok== 0, ]
interesting_smok <- abundance_data_smoking[row_sds_smok== 0, ]
all_interesting <- data.frame(feature=c(interesting_nonsmok$pathway,interesting_smok$pathway))
all_interesting <- pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
View(all_interesting)
### Pulling interesting data from the LDL smoking heatplot
interesting_pathways <- abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05_smok$feature)
all_interesting <- data.frame(feature=c(interesting_pathways$pathway))
all_interesting <- pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
View(all_interesting)
# Perform pathway differential abundance analysis (DAA) using edgeR
daa_results_df_edgeR <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_LinDA <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_LinDA_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_LinDA_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Perform pathway differential abundance analysis (DAA) using edgeR
daa_results_df_edgeR <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "fibre_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "edgeR", select = NULL, reference = NULL)
# Perform pathway differential abundance analysis (DAA) using deseq
daa_results_df_deseq <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "deseq", select = NULL, reference = NULL)
daa_results_df_deseq <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "fibre_category", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_LinDA_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_LinDA_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_edgeR_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_deseq_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "DESeq2", select = NULL, reference = NULL)
### Pull out top ten pathways in each section
results <- c(daa_results_df_LinDA,daa_results_df_LinDA_smoking,daa_results_df_LinDA_nonsmoking,
daa_results_df_edgeR,daa_results_df_edgeR_smoking,daa_results_df_edgeR_nonsmoking,
daa_results_df_deseq,daa_results_df_deseq_smoking,daa_results_df_deseq_nonsmoking)
significant <- daa_results_df_LinDA %>% filter(p_values < 0.05)
View(si)
View(significant)
significant <- daa_results_df_LinDA_nonsmoking %>% filter(p_values < 0.05)
significant <- daa_results_df_edgeR_nonsmoking %>% filter(p_values < 0.05)
significant <- daa_results_df_edgeR_smoking %>% filter(p_values < 0.05)
results$feature
### Pull out top ten pathways in each section
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
table <- data.frame()
colnames(table) <- c("LinDA","edgeR","DESeq2")
table <- data.frame(ncol=3)
rownames(table) <- unique(results$feature)
colnames(table) <- c("LinDA","edgeR","DESeq2")
View(table)
table <- data.frame()
rownames(table) <- unique(results$feature)
unique(results$feature)
sig_results <- results %>% filter(p_values<0.05)
sig_results <- lapply(results,function(df){df%>%filter(p_values<0.05)})
sig_results <- lapply(results, function(df){df %>%filter(df$p_values<0.05)})
sig_results <- lapply(results, function(df){df %>% print(df$p_values)})
sig_results <- lapply(results, function(df){df %>% print(p_values)})
daa_results_df_LinDA
sig_results <- lapply(results, function(df){df %>% filter(as.numeric(df$p_values) < 0.05)})
sig_results <- lapply(results, function(df){print(as.numeric(p_values))})
sig_results <- lapply(results, function(df){print(as.numeric(df$p_values))})
sig_results <- c((daa_results_df_LinDA%>% filter(p_values < 0.05)),
(daa_results_df_edgeR%>% filter(p_values < 0.05)),
(daa_results_df_deseq%>% filter(p_values < 0.05)))
rownames(table) <- unique(sig_results$feature)
sig_results <- c((daa_results_df_LinDA%>% filter(p_values < 0.05)),
(daa_results_df_edgeR%>% filter(p_values < 0.05)),
(daa_results_df_deseq%>% filter(p_values < 0.05)))
view(sig_results)
View(sig_results)
sig_LinDA <- daa_results_df_LinDA%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq%>% filter(p_values < 0.05)
sig_results <- c(sig_LinDA,sig_edgeR,sig_deseq)
rownames(table) <- unique(sig_results$feature)
sig_results <- cbind(sig_LinDA,sig_edgeR,sig_deseq)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
rownames(table) <- unique(sig_results$feature)
?matrix
table <- matrix(data=NA,nrow=length(unique(sig_results$feature)),ncol=3)
rownames(table) <- unique(sig_results$feature)
unique_features <- unique(sig_results$feature)
table <- matrix(data=NA,nrow=length(unique_features),ncol=3)
rownames(table) <- unique(sig_results$feature)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3){
for (j in 1:nrow(table)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- "yes"}
else {table[j,i] <- "no"}
}
}
for (i in 1:3){
for (j in 1:nrow(table)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {table[j, i] <- "yes"}
else {table[j,i] <- "no"}
}
}
View(significant)
View(table)
for (i in 1:3){
for (j in 1:nrow(table)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {table[j, i] <- 1}
}}
for (i in 1:3){
for (j in 1:nrow(table)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {table[j, i] <- 1}
else {table[j,1] <- 0}
}}
rm(table)
table <- matrix(data=NA,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3){
for (j in 1:nrow(table)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {table[j, i] <- 1}
else {table[j,1] <- 0}
}}
View(table)
sig_LinDA <- daa_results_df_LinDA%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq%>% filter(p_values < 0.05)
for (i in 1:3){
for (j in 1:nrow(table)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {table[j, i] <- 1}
else {table[j,1] <- 0}
}}
for (i in 1:3) {
for (j in 1:length(unique_row_names)) {
if (unique_row_names[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}}
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}}
View(table)
rm(table)
table <- matrix(data=NA,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}}
View(table)
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}
}
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}
}
### Pull out top ten pathways in each section
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=NA,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}
}
unique_features
table <- matrix(data=NA,nrow=length(unique_features),ncol=3)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% rownames(get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))) {
table[j, i] <- 1
}
}
}
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1
}
}
}
heatmap(table, Rowv = NA, Colv = NA, col = c("white", "black"), xlab = "Dataframes", ylab = "Row Names", main = "Presence in Dataframes")
heatmap(table, Rowv = NA, Colv = NA, col = c("white", "black"), xlab = "Dataframes",
ylab = "Sig pathway", main = "Detection by methods")
heatmap(table, Rowv = NA, Colv = NA, col = c("white", "black"), xlab = "Dataframes",
ylab = "Row Names", main = "Presence in Dataframes")
heatmap(table, Rowv = NA, Colv = NA, col = c("white", "black"), xlab = "Dataframes",
ylab = "Row Names", main = "Significnat detection by formula")
?heatmap
heatmap(table, Rowv = NA, Colv = NA, col = c("white", "skyblue"), xlab = "Dataframes",
ylab = "Row Names", main = "Sig detection by formula (black=detected)")
heatmap.2(table, Rowv = NA, Colv = NA, col = c("white", "skyblue"), xlab = "Dataframes",
ylab = "Row Names", main = "Sig detection by formula (black=detected)")
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Fromula"))
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c("No", "Yes")) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
binary_data <- melt(table, varnames = c("Feature", "Formula"))
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c("No", "Yes")) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c("No", "Yes")) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal()
binary_data
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal()
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal()
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers vs. nonsmokers")
knitr::opts_chunk$set(echo = TRUE)
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA_nonsmoking%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR_nonsmoking%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq_nonsmoking%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Dataframes", y = "Row Names", fill = "Presence") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers vs. nonsmokers")
#!/bin/R
#PURPOSE: test different methods of differential expression analyses and compare top hits
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
getwd()
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
getwd()
#!/bin/R
#PURPOSE: test different methods of differential expression analyses and compare top hits
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
getwd()
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
getwd()
#!/bin/R
#PURPOSE: test different methods of differential expression analyses and compare top hits
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
#read abundance data
abundance_file <- "picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#read metadata
metadata <- read_delim("../colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#read metadata
metadata <- read_delim("../colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE,show_col_types = FALSE)
#isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% select(pathway, everything())
daa_results_df_LinDA <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_LinDA_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_LinDA_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_edgeR <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_edgeR_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "edgeR", select = NULL, reference = NULL)
daa_results_df_deseq <- pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata,
group = "smoker", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "DESeq2", select = NULL, reference = NULL)
daa_results_df_deseq_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "DESeq2", select = NULL, reference = NULL)
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Method", y = "Pathway", fill = "Detection") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers vs. nonsmokers")
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA_nonsmoking%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR_nonsmoking%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq_nonsmoking%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Method", y = "Pathway", fill = "Detection") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers vs. nonsmokers")
results <- c(daa_results_df_LinDA,daa_results_df_edgeR,daa_results_df_deseq)
sig_LinDA <- daa_results_df_LinDA_nonsmoking%>% filter(p_values < 0.05)
sig_edgeR <- daa_results_df_edgeR_nonsmoking%>% filter(p_values < 0.05)
sig_deseq <- daa_results_df_deseq_nonsmoking%>% filter(p_values < 0.05)
sig_results <- rbind(sig_LinDA,sig_edgeR,sig_deseq)
unique_features <- unique(sig_results$feature)
table <- matrix(data=0,nrow=length(unique_features),ncol=3)
rownames(table) <- unique_features
colnames(table) <- c("LinDA","edgeR","DESeq2")
for (i in 1:3) {
for (j in 1:length(unique_features)) {
if (unique_features[j] %in% (get(paste0("sig_", c("LinDA", "edgeR", "deseq")[i])))[,1]) {
table[j, i] <- 1}}}
library(reshape2)
binary_data <- melt(table, varnames = c("Feature", "Formula"))
binary_data$value <- as.factor(binary_data$value)  # Convert to factor
# Create a heatmap using ggplot2
ggplot(binary_data, aes(x = Formula, y = Feature, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black"), labels = c(0,1)) +
labs(x = "Method", y = "Pathway", fill = "Detection") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Differential expression: smokers high vs. low LDL")
