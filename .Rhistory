group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmaps for smoking and nonsmoking populations
feature_with_p_0.05_nonsmok <- daa_results_nonsmoking_df %>% filter(p_values < 0.05)
view(feature_with_p_0.05_nonsmok)
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
rownames(abundance_data_nonsmoking) = abundance_data$pathway
View(abundance_data_nonsmoking)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking, metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
View(daa_results_df_nonsmoking)
# Generate pathway heatmaps for smoking and nonsmoking populations
feature_with_p_0.05_nonsmok <- daa_results_nonsmoking_df %>% filter(p_values < 0.05)
# Generate pathway heatmaps for smoking and nonsmoking populations
feature_with_p_0.05_nonsmok <- daa_results_df_nonsmoking %>% filter(p_values < 0.05)
heat_nonsmok <- pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% feature_with_p_0.05_nonsmok$feature)
%>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "fibre_category")
View(feature_with_p_0.05_nonsmok)
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
# rownames(abundance_data_smoking) = NULL
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
# rownames(abundance_data_nonsmoking) = NULL
# Perform pathway differential abundance analysis (DAA) using LinDA
daa_results_df <- pathway_daa(abundance = abundance_data[,-1], metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking[,-1], metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = abundance_data$pathway
# rownames(abundance_data_smoking) = NULL
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
# rownames(abundance_data_nonsmoking) = NULL
# Perform pathway differential abundance analysis (DAA) using LinDA
daa_results_df <- pathway_daa(abundance = abundance_data[,-1], metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking[,-1], metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = rownames(abundance_data_smoking)
rownames(abundance_data_smoking) = NULL
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = rownames(abundance_data_nonsmoking)
rownames(abundance_data_nonsmoking) = NULL
# abundance_data_smoking <- cbind(abundance_data$pathway,select(abundance_data, metadata_smoking$`#SampleID`))
# abundance_data_nonsmoking <- cbind(abundance_data$pathway,select(abundance_data, metadata_nonsmoking$`#SampleID`))
# names(abundance_data_smoking)[names(abundance_data_smoking) == 'abundance_data$pathway'] <- 'pathway'
# names(abundance_data_nonsmoking)[names(abundance_data_nonsmoking) == 'abundance_data$pathway'] <- 'pathway'
# Perform pathway differential abundance analysis (DAA) using LinDA
# This requires
daa_results_df <- pathway_daa(abundance = abundance_data[,-1], metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking[,-59], metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking[,-384], metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
### ISSUE: there is no column called pathway, because we removed it at line 15.
### Removing it appears to subsequently make pathway_daa() fail, but then it's needed here?
feature_with_p_0.05 <- daa_results_df_smoking %>% filter(p_values < 0.05)
pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.1$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
feature_with_p_0.05 <- daa_results_df_smoking %>% filter(p_values < 0.05)
pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
feature_with_p_0.05_smok <- daa_results_df_smoking %>% filter(p_values < 0.05)
heat_smok <- pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05_smok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
feature_with_p_0.05_nonsmok <- daa_results_df_nonsmoking %>% filter(p_values < 0.05)
heat_nonsmok <- pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% feature_with_p_0.05_nonsmok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
rownames(abundance_data_nonsmoking) = abundance_data$pathway
# rownames(abundance_data_nonsmoking) = NULL
# Perform pathway differential abundance analysis (DAA) using LinDA
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking, metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking, metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmaps for smoking and nonsmoking populations
feature_with_p_0.05_nonsmok <- daa_results_df_nonsmoking %>% filter(p_values < 0.05)
heat_nonsmok <- pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% feature_with_p_0.05_nonsmok$feature)
%>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "fibre_category")
view(feature_with_p_0.05_nonsmok)
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = rownames(abundance_data_smoking)
rownames(abundance_data_smoking) = NULL
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = rownames(abundance_data_nonsmoking)
rownames(abundance_data_nonsmoking) = NULL
# Perform pathway differential abundance analysis (DAA) using LinDA
# This requires
daa_results_df <- pathway_daa(abundance = abundance_data[,-1], metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking[,-59], metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking[,-384], metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
feature_with_p_0.05_smok <- daa_results_df_smoking %>% filter(p_values < 0.05)
view(feature_with_p_0.05_smok)
#From picrust2 analysis, produces heatmaps of pathways signififantly (p<0.05 up or downregulated)
#in smoking and nonsmoking adults, displaying their fiber consumption (high or low)
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking$pathway = rownames(abundance_data_smoking)
rownames(abundance_data_smoking) = NULL
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = rownames(abundance_data_nonsmoking)
rownames(abundance_data_nonsmoking) = NULL
# Perform pathway differential abundance analysis (DAA) using LinDA
# This requires
daa_results_df <- pathway_daa(abundance = abundance_data[,-1], metadata = metadata,
group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking[,-59], metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking[,-384], metadata = metadata_nonsmoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
feature_with_p_0.05_smok <- daa_results_df_smoking %>% filter(p_values < 0.05)
heat_smok <- pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% feature_with_p_0.05_smok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
feature_with_p_0.05_nonsmok <- daa_results_df_nonsmoking %>% filter(p_values < 0.05)
heat_nonsmok <- pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% feature_with_p_0.05_nonsmok$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
heat_nonsmok
#### Nov 1, 2023 - SKA ####
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
abundance_file <- "picrust processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE)
abundance_data  =as.data.frame(abundance_data)
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE)
abundance_data  =as.data.frame(abundance_data)
rownames(abundance_data) = abundance_data$pathway
abundance_data = abundance_data[,-1]
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
results_file_input <- ggpicrust2(file = abundance_data,
metadata = metadata,
group = "smoker",
pathway = "MetaCyc",
daa_method = "LinDA",
ko_to_kegg = FALSE,
order = "pathway_class",
p_values_bar = TRUE,
x_lab = "pathway_name")
abundance_data <- as.data.frame(abundance_data)
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
rownames(abundance_data) = abundance_data$pathway
abundance_data = abundance_data[,-1]
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
results_file_input <- ggpicrust2(file = abundance_data,
metadata = metadata,
group = "smoker",
pathway = "MetaCyc",
daa_method = "LinDA",
ko_to_kegg = FALSE,
order = "pathway_class",
p_values_bar = TRUE,
x_lab = "pathway_name")
results_file_input <- ggpicrust2(file = abundance_file,
metadata = metadata,
group = "smoker",
pathway = "MetaCyc",
daa_method = "LinDA",
ko_to_kegg = FALSE,
order = "pathway_class",
p_values_bar = TRUE,
x_lab = "pathway_name")
kegg_abundance <- ko2kegg_abundance("picrust_processing/picrust2_output_pipeline/KO_metagenome_out/pred_metagenome_unstrat.tsv")
kegg_abundance <- ko2kegg_abundance("picrust_processing/picrust2_out_pipeline/KO_metagenome_out/pred_metagenome_unstrat.tsv")
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
# Please change group to "your_group_column" if you are not using example dataset
daa_results_df <- pathway_daa(abundance = abundance_data, metadata = metadata, group = "smoker", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
View(feature_with_p_0.05)
View(feature_with_p_0.05_nonsmok)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
View(feature_with_p_0.05)
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
#### Nov 1, 2023 - SKA ####
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
# load abundance
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
rownames(abundance_data) = abundance_data$pathway
abundance_data = abundance_data[,-1]
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
results_file_input <- ggpicrust2(file = abundance_file,
metadata = metadata,
group = "smoker",
pathway = "MetaCyc",
daa_method = "LinDA",
ko_to_kegg = FALSE,
order = "pathway_class",
p_values_bar = TRUE,
x_lab = "pathway_name")
kegg_abundance <- ko2kegg_abundance("picrust_processing/picrust2_out_pipeline/KO_metagenome_out/pred_metagenome_unstrat.tsv")
abundance_data$pathway = rownames(abundance_data)
abundance data
abunda
# load abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
abundance_data$pathway = rownames(abundance_data)
abundance_data = abundance_data[,-1]
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data,
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data[,-1],
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_adjust < 0.05)
View(feature_with_p_0.05)
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
View(daa_results_df)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
###################################################
# not getting features with p<0.05
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
View(feature_with_p_0.05)
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data,
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
###################################################
# not getting features with p<0.05
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
rlang::last_trace()
View(feature_with_p_0.05)
feature_with_p_0.05$pathway = rownames(feature_with_p_0.05)
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
#### Nov 1, 2023 - SKA ####
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
# load abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
abundance_data$pathway = rownames(abundance_data)
abundance_data = abundance_data[,-1]
# load metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE)
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data,
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
feature_with_p_0.05$pathway = rownames(feature_with_p_0.05)
# Perform pathway differential abundance analysis (DAA) using ALDEx2 method
daa_results_df <- pathway_daa(abundance = abundance_data,
metadata = metadata,
group = "smoker",
daa_method = "LinDA",
select = NULL, reference = NULL)
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_with_p_0.05 <- daa_results_df %>% filter(p_values < 0.05)
feature_with_p_0.05$pathway = rownames(feature_with_p_0.05)
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% feature_with_p_0.05$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
View(abundance_data)
View(feature_with_p_0.05_nonsmok)
View(abundance_data)
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
### PCoA plot ###
# weighted unifrac
ord.weighted_unifrac <- ordinate(phyloseq_object_final, method="PCoA", distance="unifrac", weighted=TRUE)
gg_pcoa_wunifrac_fibre <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac, color = "V40") +
labs(pch="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
gg_pcoa_wunifrac_fibre
gg_pcoa_wunifrac_fibre <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac, color = "V40") +
labs(col="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
gg_pcoa_wunifrac_fibre
gg_pcoa_wunifrac_fibre <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac, color = "V40") +
labs(col="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
gg_pcoa_wunifrac_LDL <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac, color = "V41", shape = "LDL_category") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
# unweighted unifrac
ord.unweighted_unifrac <- ordinate(phyloseq_object_final, method="PCoA", distance="unifrac", weighted=FALSE)
gg_pcoa_unwunifrac_fibre <- plot_ordination(phyloseq_object_final, ord.unweighted_unifrac, color = "V40") +
labs(col="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
gg_pcoa_unwunifrac_LDL <- plot_ordination(phyloseq_object_final, ord.unweighted_unifrac, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
# bray-curtis
ord.bray <- ordinate(phyloseq_object_final, method="PCoA", distance="bray")
gg_pcoa_bray_fibre <- plot_ordination(phyloseq_object_final, ord.bray, color = "V40") +
labs(col="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
gg_pcoa_bray_LDL <- plot_ordination(phyloseq_object_final, ord.bray, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
### Save plots ###
ggsave("plot_pcoa_wunifrac_fibre.png"
, gg_pcoa_wunifrac_fibre
, height=4, width=5)
ggsave("plot_pcoa_wunifrac_LDL.png"
, gg_pcoa_wunifrac_LDL
, height=4, width=5)
ggsave("plot_pcoa_unwunifrac_fibre.png"
, gg_pcoa_wunifrac_fibre
, height=4, width=5)
ggsave("plot_pcoa_unwunifrac_LDL.png"
, gg_pcoa_wunifrac_LDL
, height=4, width=5)
ggsave("plot_pcoa_bray_fibre.png"
, gg_pcoa_bray_fibre
, height=4, width=5)
ggsave("plot_pcoa_bray_LDL.png"
, gg_pcoa_bray_LDL
, height=4, width=5)
gg_pcoa_unwunifrac_LDL <- plot_ordination(phyloseq_object_final, ord.unweighted_unifrac, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
# unweighted unifrac
ord.unweighted_unifrac <- ordinate(phyloseq_object_final, method="PCoA", distance="unifrac", weighted=FALSE)
gg_pcoa_unwunifrac_LDL <- plot_ordination(phyloseq_object_final, ord.unweighted_unifrac, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
gg_pcoa_unwunifrac_LDL
ggsave("plot_pcoa_unwunifrac_LDL.png"
, gg_pcoa_wunifrac_LDL
, height=4, width=5)
gg_pcoa_unwunifrac_fibre <- plot_ordination(phyloseq_object_final, ord.unweighted_unifrac, color = "V40") +
labs(col="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
ggsave("plot_pcoa_unwunifrac_fibre.png"
, gg_pcoa_unwunifrac_fibre
, height=4, width=5)
ggsave("plot_pcoa_unwunifrac_LDL.png"
, gg_pcoa_unwunifrac_LDL
, height=4, width=5)
# bray-curtis
ord.bray <- ordinate(phyloseq_object_final, method="PCoA", distance="bray")
gg_pcoa_bray_fibre <- plot_ordination(phyloseq_object_final, ord.bray, color = "V40") +
labs(col="smoker, fibre category") + stat_ellipse(type = "norm")#smoker-fibre
gg_pcoa_bray_LDL <- plot_ordination(phyloseq_object_final, ord.bray, color = "V41") +
labs(col="smoker, LDL category") + stat_ellipse(type = "norm")#smoker-LDL
ggsave("plot_pcoa_bray_fibre.png"
, gg_pcoa_bray_fibre
, height=4, width=5)
ggsave("plot_pcoa_bray_LDL.png"
, gg_pcoa_bray_LDL
, height=4, width=5)
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
# permanova: smoker-fibre_category
adonis2(dm_weighted_unifrac ~ `smoker`*fibre_category, data=samp_dat_wdiv)#weighted unifrac
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
