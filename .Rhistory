### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- dplyr::select(abundance_data, metadata_smoking$`#SampleID`) # if MASS package is installed, it will mask select() from dplyr - using dplyr:: forces R to use select() directly from dplyr package
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% dplyr::select(pathway, everything())
abundance_data_nonsmoking <- dplyr::select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% dplyr::select(pathway, everything())
### Filter data to remove 0 standard deviation
row_sds_nonsmok <- abundance_data_nonsmoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok != 0, ]
row.names(filtered_LDL_nonsmok) <- NULL
row_sds_smok <- abundance_data_smoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_smok <- abundance_data_smoking[row_sds_smok != 0, ]
row.names(filtered_LDL_smok) <- NULL
### Perform pathway differential abundance analysis (DAA) ### # tbd: combine LinDA method with other methods
## Multiple methods: DESeq2, edgeR, LinDA, ALDEx2
methods <- c("DESeq2", "edgeR", "LinDA") #"ALDEx2", <- error when running ALDEx2, worked initially but not anymore
daa_results_list <- lapply(methods, function(method) {
pathway_daa(abundance = abundance_data %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker", daa_method = method)
}) # smoker only
daa_results_list_smoking_fibre <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category", daa_method = method)
}) # smoking-fibre
daa_results_list_nonsmoking_fibre <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category", daa_method = method)
}) # nonsmoking-fibre
daa_results_list_smoking_LDL <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
}) # smoking-LDL
daa_results_list_nonsmoking_LDL <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
}) # nonsmoking-LDL
### Significnat Features, p<0.05 ###
sig_feature_list <- lapply(daa_results_list, function(results) {
results %>% filter(p_values < 0.05)
}) # smokers only
sig_feature_list_smoking_fibre <- lapply(daa_results_list_smoking_fibre, function(results) {results %>% filter(p_values < 0.05)
}) # smoking-fibre
sig_feature_list_nonsmoking_fibre <- lapply(daa_results_list_nonsmoking_fibre, function(results) {results %>% filter(p_values < 0.05)
}) # nonsmoking-fibre
sig_feature_list_smoking_LDL <- lapply(daa_results_list_smoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # smoking-LDL
sig_feature_list_nonsmoking_LDL <- lapply(daa_results_list_nonsmoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # nonsmoking-LDL
### Generate pathway heatmap using multiple methods ###
heatmap_list_smoker <- lapply(sig_feature_list, function(sig) {
pathway_heatmap(abundance = abundance_data %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "smoker")
}) # smokers only
heatmap_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
}) # smoking-fibre
heatmap_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
}) # nonsmoking-fibre
heatmap_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
}) # smoking-LDL
heatmap_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
}) # nonsmoking-LDL
### Assigning each heatmap ###
## smoker only
heatmap_DESeq2_smoker <- heatmap_list_smoker[[1]]
heatmap_edgeR_smoker <- heatmap_list_smoker[[2]]
heatmap_LinDA_smoker <- heatmap_list_smoker[[3]]
# heatmap_ALDEx2_smoker <- heatmap_list_smoker[[4]]
## smoking-fibre
heatmap_DESeq2_smoking_fibre <- heatmap_list_smoking_fibre[[1]]
heatmap_edgeR_smoking_fibre <- heatmap_list_smoking_fibre[[2]]
heatmap_LinDA_smoking_fibre <- heatmap_list_smoking_fibre[[3]]
# heatmap_ALDEx2_smoking_fibre <- heatmap_list_smoking_fibre[[4]]
## nonsmoking-fibre
heatmap_DESeq2_nonsmoking_fibre <- heatmap_list_nonsmoking_fibre[[1]]
heatmap_edgeR_nonsmoking_fibre <- heatmap_list_nonsmoking_fibre[[2]]
heatmap_LinDA_nonsmoking_fibre <- heatmap_list_nonsmoking_fibre[[3]]
# heatmap_ALDEx2_nonsmoking_fibre <- heatmap_list_nonsmoking_fibre[[4]]
## smoking-LDL
heatmap_DESeq2_smoking_LDL <- heatmap_list_smoking_LDL[[1]]
heatmap_edgeR_smoking_LDL <- heatmap_list_smoking_LDL[[2]]
heatmap_LinDA_smoking_LDL <- heatmap_list_smoking_LDL[[3]]
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
## nonsmoking-LDL
heatmap_DESeq2_nonsmoking_LDL <- heatmap_list_nonsmoking_LDL[[1]]
heatmap_edgeR_nonsmoking_LDL <- heatmap_list_nonsmoking_LDL[[2]]
heatmap_LinDA_nonsmoking_LDL <- heatmap_list_nonsmoking_LDL[[3]]
### Interesting Pathways ###
interesting_pathways_list <- lapply(sig_feature_list, function(sig) {
abundance_data %>% filter(pathway %in% sig$feature)
}) # smoker only
interesting_pathways_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
}) # smoking-fibre
interesting_pathways_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
}) # nonsmoking-fibre
interesting_pathways_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
}) # smoking-LDL
interesting_pathways_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
}) # nonsmoking-LDL
## isolate pathway category
all_interesting_list <- lapply(interesting_pathways_list, function(interesting) {
data.frame(feature=c(interesting$pathway))
}) # smoker only
all_interesting_list_smoking_fibre <- lapply(interesting_pathways_list_smoking_fibre, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # smoking-fibre
all_interesting_list_nonsmoking_fibre <- lapply(interesting_pathways_list_nonsmoking_fibre, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # nonsmoking-fibre
all_interesting_list_smoking_LDL <- lapply(interesting_pathways_list_smoking_LDL, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # smoking-LDL
all_interesting_list_nonsmoking_LDL <- lapply(interesting_pathways_list_nonsmoking_LDL, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # nonsmoking-LDL
## add pathway descriptions
all_interesting_list <- lapply(all_interesting_list, function(all_interesting) {
pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
}) # smoker only
all_interesting_list_smoking_fibre <- lapply(all_interesting_list_smoking_fibre, function(all_interesting) {pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
}) # smoking-fibre
all_interesting_list_nonsmoking_fibre <- lapply(all_interesting_list_nonsmoking_fibre, function(all_interesting) {pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
}) # nonsmoking-fibre
all_interesting_list_smoking_LDL <- lapply(all_interesting_list_smoking_LDL, function(all_interesting) {pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
}) # smoking-LDL
all_interesting_list_nonsmoking_LDL <- lapply(all_interesting_list_nonsmoking_LDL, function(all_interesting) {pathway_annotation(pathway = "MetaCyc", daa_results_df = all_interesting, ko_to_kegg = FALSE)
}) # nonsmoking-LDL
## smoker only
all_interesting_DESeq2_smoker <- all_interesting_list[[1]]
all_interesting_edgeR_smoker <- all_interesting_list[[2]]
all_interesting_LinDA_smoker <- all_interesting_list[[3]]
## smoking-fibre
all_interesting_DESeq2_smoking_fibre <- all_interesting_list_smoking_fibre[[1]]
all_interesting_edgeR_smoking_fibre <- all_interesting_list_smoking_fibre[[2]]
all_interesting_LinDA_smoking_fibre <- all_interesting_list_smoking_fibre[[3]]
## nonsmoking-fibre
all_interesting_DESeq2_nonsmoking_fibre <- all_interesting_list_nonsmoking_fibre[[1]]
all_interesting_edgeR_nonsmoking_fibre <- all_interesting_list_nonsmoking_fibre[[2]]
all_interesting_LinDA_nonsmoking_fibre <- all_interesting_list_nonsmoking_fibre[[3]]
## smoking-LDL
all_interesting_DESeq2_smoking_LDL <- all_interesting_list_smoking_LDL[[1]]
all_interesting_edgeR_smoking_LDL <- all_interesting_list_smoking_LDL[[2]]
all_interesting_LinDA_smoking_LDL <- all_interesting_list_smoking_LDL[[3]]
## nonsmoking-LDL
all_interesting_DESeq2_nonsmoking_LDL <- all_interesting_list_nonsmoking_LDL[[1]]
all_interesting_edgeR_nonsmoking_LDL <- all_interesting_list_nonsmoking_LDL[[2]]
all_interesting_LinDA_nonsmoking_LDL <- all_interesting_list_nonsmoking_LDL[[3]]
View(heatmap_DESeq2_nonsmoking_fibre)
View(heatmap_DESeq2_nonsmoking_fibre)
View(all_interesting_DESeq2_smoking_LDL)
View(all_interesting_edgeR_smoking_LDL)
View(all_interesting_LinDA_smoking_fibre)
View(all_interesting_LinDA_nonsmoking_fibre)
View(all_interesting_LinDA_smoking_fibre)
View(all_interesting_DESeq2_nonsmoking_fibre)
View(all_interesting_LinDA_nonsmoking_LDL)
View(all_interesting_LinDA_nonsmoking_LDL)
View(all_interesting_LinDA_smoking_LDL)
View(interesting_pathways_list_smoking_LDL)
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_LinDA_smoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESEq2_smoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESeq2_smoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESeq2_nonsmoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESeq2_nonsmoking_LDL
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- dplyr::select(abundance_data, metadata_smoking$`#SampleID`) # if MASS package is installed, it will mask select() from dplyr - using dplyr:: forces R to use select() directly from dplyr package
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% dplyr::select(pathway, everything())
abundance_data_nonsmoking <- dplyr::select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% dplyr::select(pathway, everything())
### Filter data to remove 0 standard deviation
row_sds_nonsmok <- abundance_data_nonsmoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok != 0, ]
row.names(filtered_LDL_nonsmok) <- NULL
row_sds_smok <- abundance_data_smoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_smok <- abundance_data_smoking[row_sds_smok != 0, ]
row.names(filtered_LDL_smok) <- NULL
### Perform pathway differential abundance analysis (DAA) ### # tbd: combine LinDA method with other methods
## Multiple methods: DESeq2, edgeR, LinDA, ALDEx2
methods <- c("DESeq2", "edgeR", "LinDA") #"ALDEx2", <- error when running ALDEx2, worked initially but not anymore
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- dplyr::select(abundance_data, metadata_smoking$`#SampleID`) # if MASS package is installed, it will mask select() from dplyr - using dplyr:: forces R to use select() directly from dplyr package
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% dplyr::select(pathway, everything())
abundance_data_nonsmoking <- dplyr::select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% dplyr::select(pathway, everything())
### Filter data to remove 0 standard deviation
row_sds_nonsmok <- abundance_data_nonsmoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok != 0, ]
row.names(filtered_LDL_nonsmok) <- NULL
row_sds_smok <- abundance_data_smoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_smok <- abundance_data_smoking[row_sds_smok != 0, ]
row.names(filtered_LDL_smok) <- NULL
### Perform pathway differential abundance analysis (DAA) ### # tbd: combine LinDA method with other methods
## Multiple methods: DESeq2, edgeR, LinDA, ALDEx2
methods <- c("DESeq2", "edgeR", "LinDA") #"ALDEx2", <- error when running ALDEx2, worked initially but not anymore
daa_results_list_smoking_LDL <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
}) # smoking-LDL
daa_results_list_nonsmoking_LDL <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
}) # nonsmoking-LDL
View(daa_results_list_smoking_LDL)
# sig_feature_list_smoking_fibre <- lapply(daa_results_list_smoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # smoking-fibre
# sig_feature_list_nonsmoking_fibre <- lapply(daa_results_list_nonsmoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # nonsmoking-fibre
sig_feature_list_smoking_LDL <- lapply(daa_results_list_smoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # smoking-LDL
View(sig_feature_list_smoking_LDL)
sig_feature_list_nonsmoking_LDL <- lapply(daa_results_list_nonsmoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # nonsmoking-LDL
# heatmap_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
# }) # smoking-fibre
# heatmap_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
# }) # nonsmoking-fibre
heatmap_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
}) # smoking-LDL
heatmap_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
}) # nonsmoking-LDL
# interesting_pathways_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
# }) # smoking-fibre
# interesting_pathways_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
# }) # nonsmoking-fibre
interesting_pathways_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
}) # smoking-LDL
interesting_pathways_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
}) # nonsmoking-LDL
View(interesting_pathways_list_smoking_LDL)
View(sig_feature_list_smoking_LDL)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% select(pathway, everything())
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
feature_with_p_0.05_smok <- daa_results_df_smoking %>% filter(p_values < 0.05)
View(feature_with_p_0.05_smok)
# sig_feature_list_smoking_fibre <- lapply(daa_results_list_smoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # smoking-fibre
# sig_feature_list_nonsmoking_fibre <- lapply(daa_results_list_nonsmoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # nonsmoking-fibre
sig_feature_list_smoking_LDL <- lapply(daa_results_list_smoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # smoking-LDL
View(sig_feature_list_smoking_LDL)
view(sig_feature_list_smoking_LDL[[3]])
daa_results_df_smoking_LDL <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking_LDL <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap for LDL groups
feature_with_p_0.05_smok_LDL <- daa_results_df_smoking_LDL %>% filter(p_values < 0.05)
View(feature_with_p_0.05_smok_LDL)
view(interesting_pathways_list_smoking_LDL[[3]])
# interesting_pathways_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
# }) # smoking-fibre
# interesting_pathways_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
# }) # nonsmoking-fibre
interesting_pathways_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
}) # smoking-LDL
interesting_pathways_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
}) # nonsmoking-LDL
## isolate pathway category
all_interesting_list <- lapply(interesting_pathways_list, function(interesting) {
data.frame(feature=c(interesting$pathway))
}) # smoker only
# all_interesting_list_smoking_fibre <- lapply(interesting_pathways_list_smoking_fibre, function(interesting) {data.frame(feature=c(interesting$pathway))
# }) # smoking-fibre
# all_interesting_list_nonsmoking_fibre <- lapply(interesting_pathways_list_nonsmoking_fibre, function(interesting) {data.frame(feature=c(interesting$pathway))
# }) # nonsmoking-fibre
all_interesting_list_smoking_LDL <- lapply(interesting_pathways_list_smoking_LDL, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # smoking-LDL
all_interesting_list_nonsmoking_LDL <- lapply(interesting_pathways_list_nonsmoking_LDL, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # nonsmoking-LDL
view(all_interesting_list_smoking_LDL[[3]])
View(sig_feature_list_nonsmoking_LDL)
View(sig_feature_list_smoking_LDL)
#Loading packages
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(DESeq2)
library(ggh4x)
#loading a custom function to provide all DESeq2 results
source("DESeq2_function.R")
#loading a custom function to provide all DESeq2 results
source("DESeq2_function.R")
#loading a custom function to provide all DESeq2 results
source("picrust_processing/DESeq2_function.R")
#Importing the pathway PICrust2
abundance_file <- "picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE)
#Importing the pathway PICrust2
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE)
abundance_data  =as.data.frame(abundance_data)
#Read in your metadata file
metadata <- read_delim(
"colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE
)
#Removing all columns that include NA's for the pathways_daa() function
metadata = metadata[ , colSums(is.na(metadata)) == 0]
#Removing all columns that include NA's for the pathways_daa() function
metadata = metadata[ , colSums(is.na(metadata)) == 0]
View(metadata)
#Filter your metadata as needed to look at specific comparisons
smoker_only_metadata = metadata %>%filter(smoker == "Yes")
nonsmoker_only_metadata = metadata %>%filter(smoker == "No")
#Filter your metadata as needed to look at specific comparisons
metadata_smoking = metadata %>%filter(smoker == "Yes")
metadata_nonsmoking = metadata %>%filter(smoker == "No")
#Filtering the abundance table to only include samples that are in the filtered metadata
sample_names_smoking = metadata_smoking$`#SampleID`
sample_names_smoking = append(sample_names_smoking, "pathway")
abundance_data_smoking = abundance_data[, colnames(abundance_data) %in% sample_names_smoking] #This step is the actual filtering
#Removing individuals with no data that caused a problem for pathways_daa()
abundance_data_smoking =  abundance_data_smoking[, colSums(abundance_data_smoking != 0) > 0]
#Filtering the abundance table to only include samples that are in the filtered metadata
sample_names_smoking = metadata_smoking$`#SampleID`
sample_names_smoking = append(sample_names_smoking, "pathway")
abundance_data_smoking = abundance_data[, colnames(abundance_data) %in% sample_names_smoking] #This step is the actual filtering
#Removing individuals with no data that caused a problem for pathways_daa()
abundance_data_smoking =  abundance_data_smoking[, colSums(abundance_data_smoking != 0) > 0]
#Filtering out columns that represent a total abundance < 10000
#Filtering out rows (pathways) that have a total count < 100
abundance_data_smoking = abundance_data_smoking[,colSums(abundance_data_smoking[,-1]) > 10000]
abundance_data_smoking = abundance_data_smoking[rowSums(abundance_data_smoking[,-1]) > 100,]
#Ensuring the rownames for the abundance_data_filtered is empty. This is required for their functions to run.
rownames(abundance_data_smoking) = NULL
#verify samples in metadata match samples in abundance_data
abun_samples = rownames(t(abundance_data_smoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
#verify samples in metadata match samples in abundance_data
abun_samples_smoking = rownames(t(abundance_data_smoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
metadata_smoking = metadata_smoking[metadata_smoking$`#SampleID` %in% abun_samples_smoking,] #making sure the filtered metadata only includes these samples
#Here is an example
smoking_res =  DEseq2_function(abundance_data_smoking,metadata_smoking)
#loading a custom function to provide all DESeq2 results
source("picrust_processing/DESeq2_function.R")
#Here is an example
smoking_res =  DEseq2_function(abundance_data_smoking,metadata_smoking)
View(DEseq2_function)
sample_names_nonsmoking = metadata_nonsmoking$`#SampleID`
sample_names_nonsmoking = append(sample_names_nonsmoking, "pathway")
abundance_data_nonsmoking = abundance_data[, colnames(abundance_data) %in% sample_names_nonsmoking] #This step is the actual filtering
abundance_data_nonsmoking =  abundance_data_nonsmoking[, colSums(abundance_data_nonsmoking != 0) > 0]
abundance_data_nonsmoking = abundance_data_nonsmoking[,colSums(abundance_data_nonsmoking[,-1]) > 10000]
abundance_data_nonsmoking = abundance_data_nonsmoking[rowSums(abundance_data_nonsmoking[,-1]) > 100,]
rownames(abundance_data_nonsmoking) = NULL
abun_samples_nonsmoking = rownames(t(abundance_data_nonsmoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
metadata_nonsmoking = metadata_nonsmoking[metadata_nonsmoking$`#SampleID` %in% abun_samples_nonsmoking,] #making sure the filtered metadata only includes these samples
# Perform pathway DAA using DESeq2 method
metacyc_daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "Species", daa_method = "DESeq2")
#Loading packages
library(readr)
library(ggpicrust2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(DESeq2)
library(ggh4x)
# Perform pathway DAA using DESeq2 method
metacyc_daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "Species", daa_method = "DESeq2")
# Perform pathway DAA using DESeq2 method
metacyc_daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "LDL_category", daa_method = "DESeq2")
# Annotate MetaCyc pathway results without KO to KEGG conversion. This line provides a useful description for your pathway accessions.
metacyc_daa_annotated_results_df_smoking <- pathway_annotation(pathway = "MetaCyc", daa_results_df = metacyc_daa_results_df_smoking, ko_to_kegg = FALSE)
metacyc_daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "LDL_category", daa_method = "DESeq2")
abundance_data_nonsmoking = abundance_data_nonsmoking[,colSums(abundance_data_nonsmoking[,-1]) > 10000]
abundance_data_nonsmoking = abundance_data_nonsmoking[rowSums(abundance_data_nonsmoking[,-1]) > 100,]
#Ensuring the rownames for the abundance_data_filtered is empty. This is required for their functions to run.
rownames(abundance_data_smoking) = NULL
rownames(abundance_data_nonsmoking) = NULL
#verify samples in metadata match samples in abundance_data
abun_samples_smoking = rownames(t(abundance_data_smoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
metadata_smoking = metadata_smoking[metadata_smoking$`#SampleID` %in% abun_samples_smoking,] #making sure the filtered metadata only includes these samples
abun_samples_nonsmoking = rownames(t(abundance_data_nonsmoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
metadata_nonsmoking = metadata_nonsmoking[metadata_nonsmoking$`#SampleID` %in% abun_samples_nonsmoking,] #making sure the filtered metadata only includes these samples
# Perform pathway DAA using DESeq2 method
metacyc_daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "LDL_category", daa_method = "DESeq2")
# Annotate MetaCyc pathway results without KO to KEGG conversion. This line provides a useful description for your pathway accessions.
metacyc_daa_annotated_results_df_smoking <- pathway_annotation(pathway = "MetaCyc", daa_results_df = metacyc_daa_results_df_smoking, ko_to_kegg = FALSE)
metacyc_daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "LDL_category", daa_method = "DESeq2")
metacyc_daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "LDL_category", daa_method = "DESeq2")
# Annotate MetaCyc pathway results without KO to KEGG conversion. This line provides a useful description for your pathway accessions.
metacyc_daa_annotated_results_df_nonsmoking <- pathway_annotation(pathway = "MetaCyc", daa_results_df = metacyc_daa_results_df_nonsmoking, ko_to_kegg = FALSE)
View(metacyc_daa_annotated_results_df_nonsmoking)
#Here is an example
smoking_res =  DEseq2_function(abundance_data_smoking,metadata_smoking)
#loading a custom function to provide all DESeq2 results
source("picrust_processing/DESeq2_function.R")
#Importing the pathway PICrust2
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv.gz"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE)
abundance_data  =as.data.frame(abundance_data)
#Read in your metadata file
metadata <- read_delim(
"colombia/metadata_categorized_CL.txt",
delim = "\t",
escape_double = FALSE,
trim_ws = TRUE
)
#Removing all columns that include NA's for the pathways_daa() function
metadata = metadata[ , colSums(is.na(metadata)) == 0]
#Filter your metadata as needed to look at specific comparisons
metadata_smoking = metadata %>%filter(smoker == "Yes")
metadata_nonsmoking = metadata %>%filter(smoker == "No")
#Filtering the abundance table to only include samples that are in the filtered metadata
sample_names_smoking = metadata_smoking$`#SampleID`
sample_names_smoking = append(sample_names_smoking, "pathway")
abundance_data_smoking = abundance_data[, colnames(abundance_data) %in% sample_names_smoking] #This step is the actual filtering
sample_names_nonsmoking = metadata_nonsmoking$`#SampleID`
sample_names_nonsmoking = append(sample_names_nonsmoking, "pathway")
abundance_data_nonsmoking = abundance_data[, colnames(abundance_data) %in% sample_names_nonsmoking] #This step is the actual filtering
#Removing individuals with no data that caused a problem for pathways_daa()
abundance_data_smoking =  abundance_data_smoking[, colSums(abundance_data_smoking != 0) > 0]
abundance_data_nonsmoking =  abundance_data_nonsmoking[, colSums(abundance_data_nonsmoking != 0) > 0]
#Filtering out columns that represent a total abundance < 10000
#Filtering out rows (pathways) that have a total count < 100
abundance_data_smoking = abundance_data_smoking[,colSums(abundance_data_smoking[,-1]) > 10000]
abundance_data_smoking = abundance_data_smoking[rowSums(abundance_data_smoking[,-1]) > 100,]
abundance_data_nonsmoking = abundance_data_nonsmoking[,colSums(abundance_data_nonsmoking[,-1]) > 10000]
abundance_data_nonsmoking = abundance_data_nonsmoking[rowSums(abundance_data_nonsmoking[,-1]) > 100,]
#Ensuring the rownames for the abundance_data_filtered is empty. This is required for their functions to run.
rownames(abundance_data_smoking) = NULL
rownames(abundance_data_nonsmoking) = NULL
#verify samples in metadata match samples in abundance_data
abun_samples_smoking = rownames(t(abundance_data_smoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
metadata_smoking = metadata_smoking[metadata_smoking$`#SampleID` %in% abun_samples_smoking,] #making sure the filtered metadata only includes these samples
abun_samples_nonsmoking = rownames(t(abundance_data_nonsmoking[,-1])) #Getting a list of the sample names in the newly filtered abundance data
metadata_nonsmoking = metadata_nonsmoking[metadata_nonsmoking$`#SampleID` %in% abun_samples_nonsmoking,] #making sure the filtered metadata only includes these samples
# Perform pathway DAA using DESeq2 method
metacyc_daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata_smoking, group = "LDL_category", daa_method = "DESeq2")
# Annotate MetaCyc pathway results without KO to KEGG conversion. This line provides a useful description for your pathway accessions.
metacyc_daa_annotated_results_df_smoking <- pathway_annotation(pathway = "MetaCyc", daa_results_df = metacyc_daa_results_df_smoking, ko_to_kegg = FALSE)
metacyc_daa_results_df_nonsmoking <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking, group = "LDL_category", daa_method = "DESeq2")
# Annotate MetaCyc pathway results without KO to KEGG conversion. This line provides a useful description for your pathway accessions.
metacyc_daa_annotated_results_df_nonsmoking <- pathway_annotation(pathway = "MetaCyc", daa_results_df = metacyc_daa_results_df_nonsmoking, ko_to_kegg = FALSE)
#Here is an example
smoking_res = DEseq2_function(abundance_data_smoking,metadata_smoking)
View(DEseq2_function)
#Here is an example
DEseq2_function = function(abundance_table,metadata){
DESeq2_metadata <- metadata
DESeq2_abundance_mat <- abundance_table %>% column_to_rownames("pathway")
DESeq2_colnames <- colnames(DESeq2_metadata)
DESeq2_colnames[DESeq2_colnames == "Species"] <- "Group_group_nonsense"
colnames(DESeq2_metadata) <- DESeq2_colnames
DESeq2_metadata = as.data.frame(DESeq2_metadata)
DESeq2_metadata[,"Group_group_nonsense"] <- as.factor(DESeq2_metadata[,"Group_group_nonsense"])
# Generate combinations of groups for comparison
DESeq2_combinations <- utils::combn(unique(DESeq2_metadata[, "Group_group_nonsense"]), 2)
DESeq2_results <- list()
# Loop through combinations and perform DESeq2 analysis
message("Performing pairwise comparisons with DESeq2...")
for (i in seq_len(ncol(DESeq2_combinations))) {
j <- DESeq2_combinations[, i]
# Subsetting the data for the current combination of groups
DESeq2_sub_group <- DESeq2_metadata$Group_group_nonsense %in% j
DESeq2_metadata_sub <- DESeq2_metadata[DESeq2_sub_group,]
DESeq2_abundance_mat_sub <- DESeq2_abundance_mat[, DESeq2_sub_group]
DESeq2_abundance_mat_sub <- round(DESeq2_abundance_mat_sub)
# Creating DESeq2 object and performing analysis
DESeq2_object <- DESeq2::DESeqDataSetFromMatrix(
countData = DESeq2_abundance_mat_sub,
colData = DESeq2_metadata_sub,
design = ~ Group_group_nonsense
)
DESeq2_object <- BiocGenerics::estimateSizeFactors(DESeq2_object, type = "poscounts")
DESeq2_object_finish <- DESeq2::DESeq(DESeq2_object)
DESeq2_results[[i]] <- DESeq2::results(DESeq2_object_finish)
results = as.data.frame(DESeq2_results)
}
return(results)
}
smoking_res = DEseq2_function(abundance_data_smoking,metadata_smoking)
smoking_res = DEseq2_function(abundance_data_smoking, metadata_smoking)
#Here is an example
smoking_res = DEseq2_function(abundance_data_smoking, metadata_smoking)
DEseq2_function(abundance_data_smoking, metadata_smoking)
#loading a custom function to provide all DESeq2 results
source("picrust_processing/DESeq2_function.R")
DEseq2_function(abundance_data_smoking, metadata_smoking)
#Here is an example
smoking_res = DEseq2_function(abundance_data_smoking, metadata_smoking)
View(smoking_res)
View(smoking_res)
