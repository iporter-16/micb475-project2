<<<<<<< Updated upstream
}) # nonsmoking-LDL
## smoker only
all_interesting_DESeq2_smoker <- all_interesting_list[[1]]
all_interesting_edgeR_smoker <- all_interesting_list[[2]]
all_interesting_LinDA_smoker <- all_interesting_list[[3]]
## smoking-fibre
all_interesting_DESeq2_smoking_fibre <- all_interesting_list_smoking_fibre[[1]]
all_interesting_edgeR_smoking_fibre <- all_interesting_list_smoking_fibre[[2]]
all_interesting_LinDA_smoking_fibre <- all_interesting_list_smoking_fibre[[3]]
## nonsmoking-fibre
all_interesting_DESeq2_nonsmoking_fibre <- all_interesting_list_nonsmoking_fibre[[1]]
all_interesting_edgeR_nonsmoking_fibre <- all_interesting_list_nonsmoking_fibre[[2]]
all_interesting_LinDA_nonsmoking_fibre <- all_interesting_list_nonsmoking_fibre[[3]]
## smoking-LDL
all_interesting_DESeq2_smoking_LDL <- all_interesting_list_smoking_LDL[[1]]
all_interesting_edgeR_smoking_LDL <- all_interesting_list_smoking_LDL[[2]]
all_interesting_LinDA_smoking_LDL <- all_interesting_list_smoking_LDL[[3]]
## nonsmoking-LDL
all_interesting_DESeq2_nonsmoking_LDL <- all_interesting_list_nonsmoking_LDL[[1]]
all_interesting_edgeR_nonsmoking_LDL <- all_interesting_list_nonsmoking_LDL[[2]]
all_interesting_LinDA_nonsmoking_LDL <- all_interesting_list_nonsmoking_LDL[[3]]
View(heatmap_DESeq2_nonsmoking_fibre)
View(heatmap_DESeq2_nonsmoking_fibre)
View(all_interesting_DESeq2_smoking_LDL)
View(all_interesting_edgeR_smoking_LDL)
View(all_interesting_LinDA_smoking_fibre)
View(all_interesting_LinDA_nonsmoking_fibre)
View(all_interesting_LinDA_smoking_fibre)
View(all_interesting_DESeq2_nonsmoking_fibre)
View(all_interesting_LinDA_nonsmoking_LDL)
View(all_interesting_LinDA_nonsmoking_LDL)
View(all_interesting_LinDA_smoking_LDL)
View(interesting_pathways_list_smoking_LDL)
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_LinDA_smoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESEq2_smoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESeq2_smoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESeq2_nonsmoking_LDL
# heatmap_ALDEx2_smoking_LDL <- heatmap_list_smoking_LDL[[4]]
heatmap_DESeq2_nonsmoking_LDL
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- dplyr::select(abundance_data, metadata_smoking$`#SampleID`) # if MASS package is installed, it will mask select() from dplyr - using dplyr:: forces R to use select() directly from dplyr package
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% dplyr::select(pathway, everything())
abundance_data_nonsmoking <- dplyr::select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% dplyr::select(pathway, everything())
### Filter data to remove 0 standard deviation
row_sds_nonsmok <- abundance_data_nonsmoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok != 0, ]
row.names(filtered_LDL_nonsmok) <- NULL
row_sds_smok <- abundance_data_smoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_smok <- abundance_data_smoking[row_sds_smok != 0, ]
row.names(filtered_LDL_smok) <- NULL
### Perform pathway differential abundance analysis (DAA) ### # tbd: combine LinDA method with other methods
## Multiple methods: DESeq2, edgeR, LinDA, ALDEx2
methods <- c("DESeq2", "edgeR", "LinDA") #"ALDEx2", <- error when running ALDEx2, worked initially but not anymore
### Read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
### Read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
### Isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- dplyr::select(abundance_data, metadata_smoking$`#SampleID`) # if MASS package is installed, it will mask select() from dplyr - using dplyr:: forces R to use select() directly from dplyr package
abundance_data_smoking$pathway = abundance_data$pathway
abundance_data_smoking <- abundance_data_smoking %>% dplyr::select(pathway, everything())
abundance_data_nonsmoking <- dplyr::select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% dplyr::select(pathway, everything())
### Filter data to remove 0 standard deviation
row_sds_nonsmok <- abundance_data_nonsmoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_nonsmok <- abundance_data_nonsmoking[row_sds_nonsmok != 0, ]
row.names(filtered_LDL_nonsmok) <- NULL
row_sds_smok <- abundance_data_smoking %>% column_to_rownames("pathway") %>% apply(1, sd)
filtered_LDL_smok <- abundance_data_smoking[row_sds_smok != 0, ]
row.names(filtered_LDL_smok) <- NULL
### Perform pathway differential abundance analysis (DAA) ### # tbd: combine LinDA method with other methods
## Multiple methods: DESeq2, edgeR, LinDA, ALDEx2
methods <- c("DESeq2", "edgeR", "LinDA") #"ALDEx2", <- error when running ALDEx2, worked initially but not anymore
daa_results_list_smoking_LDL <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_smoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
}) # smoking-LDL
daa_results_list_nonsmoking_LDL <- lapply(methods, function(method) {pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category", daa_method = method)
}) # nonsmoking-LDL
View(daa_results_list_smoking_LDL)
# sig_feature_list_smoking_fibre <- lapply(daa_results_list_smoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # smoking-fibre
# sig_feature_list_nonsmoking_fibre <- lapply(daa_results_list_nonsmoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # nonsmoking-fibre
sig_feature_list_smoking_LDL <- lapply(daa_results_list_smoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # smoking-LDL
View(sig_feature_list_smoking_LDL)
sig_feature_list_nonsmoking_LDL <- lapply(daa_results_list_nonsmoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # nonsmoking-LDL
# heatmap_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
# }) # smoking-fibre
# heatmap_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "fibre_category")
# }) # nonsmoking-fibre
heatmap_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {pathway_heatmap(abundance = abundance_data_smoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
}) # smoking-LDL
heatmap_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {pathway_heatmap(abundance = abundance_data_nonsmoking %>% filter(pathway %in% sig$feature) %>% column_to_rownames("pathway"), metadata = metadata, group = "LDL_category")
}) # nonsmoking-LDL
# interesting_pathways_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
# }) # smoking-fibre
# interesting_pathways_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
# }) # nonsmoking-fibre
interesting_pathways_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
}) # smoking-LDL
interesting_pathways_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
}) # nonsmoking-LDL
View(interesting_pathways_list_smoking_LDL)
View(sig_feature_list_smoking_LDL)
#read abundance data
abundance_file <- "picrust_processing/picrust2_out_pipeline/pathways_out/path_abun_unstrat.tsv"
abundance_data <- read_delim(abundance_file, delim = "\t", col_names = TRUE, trim_ws = TRUE) %>% as.data.frame()
#read metadata
metadata <- read_delim("colombia/metadata_categorized_CL.txt",delim = "\t",escape_double = FALSE,trim_ws = TRUE)
#isolate smoking and nonsmoking from abundance data and metadata
metadata_smoking <- filter(metadata, metadata$smoker=="Yes")
metadata_nonsmoking <- filter(metadata, metadata$smoker=="No")
abundance_data_smoking <- select(abundance_data, metadata_smoking$`#SampleID`)
abundance_data_smoking <- abundance_data_smoking %>% select(pathway, everything())
abundance_data_nonsmoking <- select(abundance_data, metadata_nonsmoking$`#SampleID`)
abundance_data_nonsmoking$pathway = abundance_data$pathway
abundance_data_nonsmoking <- abundance_data_nonsmoking %>% select(pathway, everything())
daa_results_df_smoking <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "fibre_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap
feature_with_p_0.05_smok <- daa_results_df_smoking %>% filter(p_values < 0.05)
View(feature_with_p_0.05_smok)
# sig_feature_list_smoking_fibre <- lapply(daa_results_list_smoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # smoking-fibre
# sig_feature_list_nonsmoking_fibre <- lapply(daa_results_list_nonsmoking_fibre, function(results) {results %>% filter(p_values < 0.05)
# }) # nonsmoking-fibre
sig_feature_list_smoking_LDL <- lapply(daa_results_list_smoking_LDL, function(results) {results %>% filter(p_values < 0.05)
}) # smoking-LDL
View(sig_feature_list_smoking_LDL)
view(sig_feature_list_smoking_LDL[[3]])
daa_results_df_smoking_LDL <- pathway_daa(abundance = abundance_data_smoking%>% column_to_rownames("pathway"), metadata = metadata_smoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
daa_results_df_nonsmoking_LDL <- pathway_daa(abundance = abundance_data_nonsmoking %>% column_to_rownames("pathway"), metadata = metadata_nonsmoking,
group = "LDL_category", daa_method = "LinDA", select = NULL, reference = NULL)
# Generate pathway heatmap for LDL groups
feature_with_p_0.05_smok_LDL <- daa_results_df_smoking_LDL %>% filter(p_values < 0.05)
View(feature_with_p_0.05_smok_LDL)
view(interesting_pathways_list_smoking_LDL[[3]])
# interesting_pathways_list_smoking_fibre <- lapply(sig_feature_list_smoking_fibre, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
# }) # smoking-fibre
# interesting_pathways_list_nonsmoking_fibre <- lapply(sig_feature_list_nonsmoking_fibre, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
# }) # nonsmoking-fibre
interesting_pathways_list_smoking_LDL <- lapply(sig_feature_list_smoking_LDL, function(sig) {abundance_data_smoking %>% filter(pathway %in% sig$feature)
}) # smoking-LDL
interesting_pathways_list_nonsmoking_LDL <- lapply(sig_feature_list_nonsmoking_LDL, function(sig) {abundance_data_nonsmoking %>% filter(pathway %in% sig$feature)
}) # nonsmoking-LDL
## isolate pathway category
all_interesting_list <- lapply(interesting_pathways_list, function(interesting) {
data.frame(feature=c(interesting$pathway))
}) # smoker only
# all_interesting_list_smoking_fibre <- lapply(interesting_pathways_list_smoking_fibre, function(interesting) {data.frame(feature=c(interesting$pathway))
# }) # smoking-fibre
# all_interesting_list_nonsmoking_fibre <- lapply(interesting_pathways_list_nonsmoking_fibre, function(interesting) {data.frame(feature=c(interesting$pathway))
# }) # nonsmoking-fibre
all_interesting_list_smoking_LDL <- lapply(interesting_pathways_list_smoking_LDL, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # smoking-LDL
all_interesting_list_nonsmoking_LDL <- lapply(interesting_pathways_list_nonsmoking_LDL, function(interesting) {data.frame(feature=c(interesting$pathway))
}) # nonsmoking-LDL
view(all_interesting_list_smoking_LDL[[3]])
View(sig_feature_list_nonsmoking_LDL)
View(sig_feature_list_smoking_LDL)
#Loading packages
library(readr)
library(ggpicrust2)
library(tibble)
=======
print("hello")
class(list(name1=c("string")))
##### Nov 14, 2023 - AW ####
#DESeq module - relative abundance of LDL genus
#load libraries
>>>>>>> Stashed changes
library(tidyverse)
library(phyloseq)
<<<<<<< Updated upstream
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#Making a new column in the metadata to combined LDL and smoking
sample_data(phyloseq_object_final)[[41]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[37]])
View(phyloseq_object_final)
view(phyloseq_object_final[[sam_data]])
View(samp_dat_wdiv)
#### Oct 26, 2023 - SKA ####
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
#### Oct 26, 2023 - SKA ####
#Making a new column in the metadata to combined fibre and smoking
sample_data(phyloseq_object_final)[[40]] = paste(sample_data(phyloseq_object_final)[[32]],sample_data(phyloseq_object_final)[[38]])
### PCoA Plot - Final Figure ###
# Beta Diversity figure panel will include Weighted Unifrac PCoA Plot of the smoker and LDL categories,
# divided into 2 plots, one with smokers only and the other with nonsmokers only
## Filter smokers only and nonsmokers only ##
sample_data(phyloseq_object_final)
### PCoA Plot - Final Figure ###
# Beta Diversity figure panel will include Weighted Unifrac PCoA Plot of the smoker and LDL categories,
# divided into 2 plots, one with smokers only and the other with nonsmokers only
## Filter smokers only and nonsmokers only ##
view(sample_data(phyloseq_object_final))
# Load phyloseq object
load("phyloseq_object_final_highcount.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
### PCoA Plot - Final Figure ###
# Beta Diversity figure panel will include Weighted Unifrac PCoA Plot of the smoker and LDL categories,
# divided into 2 plots, one with smokers only and the other with nonsmokers only
## Filter smokers only and nonsmokers only ##
view(sample_data(phyloseq_object_final_highcount))
phyloseq_object_smoking <- filter(phyloseq_object_final_highcount, phyloseq_object_final_highcount$smoker == "yes")
phyloseq_object_smoking <- filter(phyloseq_object_final_highcount, sample_data(phyloseq_object_final_highcount)$smoker == "yes")
phyloseq_object_smoking <- filter(sample_data(phyloseq_object_final_highcount), sample_data(phyloseq_object_final_highcount)$smoker == "yes")
View(metadata)
phyloseq_object_smoking <- subset_samples(phyloseq_object_final_highcount, smoker == "yes")
phyloseq_object_smoking <- subset_samples(phyloseq_object_final_highcount, smoker == "Yes")
phyloseq_object_nonsmoking <- subset_samples(phyloseq_object_final_highcount, smoker == "No")
## Generate PCoA plots using weighted unifrac ##
ord.weighted_unifrac_smoking <- ordinate(phyloseq_object_smoking, method="PCoA", distance="unifrac", weighted=TRUE)
ord.weighted_unifrac_smoking <- ordinate(phyloseq_object_nonsmoking, method="PCoA", distance="unifrac", weighted=TRUE)
gg_pcoa_wunifrac_smoking_LDL <- plot_ordination(phyloseq_object_smoking, ord.weighted_unifrac_smoking, color = "LDL_category") +
labs(col="LDL category") + stat_ellipse(type = "norm")#smoking-LDL
## Generate PCoA plots using weighted unifrac ##
ord.weighted_unifrac_smoking <- ordinate(phyloseq_object_smoking, method="PCoA", distance="unifrac", weighted=TRUE)
ord.weighted_unifrac_nonsmoking <- ordinate(phyloseq_object_nonsmoking, method="PCoA", distance="unifrac", weighted=TRUE)
gg_pcoa_wunifrac_smoking_LDL <- plot_ordination(phyloseq_object_smoking, ord.weighted_unifrac_smoking, color = "LDL_category") +
labs(col="LDL category") + stat_ellipse(type = "norm")#smoking-LDL
View(gg_pcoa_wunifrac_smoking_LDL)
gg_pcoa_wunifrac_smoking_LDL
gg_pcoa_wunifrac_nonsmoking_LDL <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac_nonsmoking, color = "LDL_category") +
labs(col="LDL category") + stat_ellipse(type = "norm")#nonsmoking-LDL
gg_pcoa_wunifrac_nonsmoking_LDL
### Save plots ###
setwd("/Users/saman/Desktop/micb475-project2/pcoa_plots/beta_diversity")
ggsave("plot_pcoa_wunifrac_smoking_LDL.png", gg_pcoa_wunifrac_smoking_LDL, height=3, width=5)
ggsave("plot_pcoa_wunifrac_nonsmoking_LDL.png", gg_pcoa_wunifrac_nonsmoking_LDL, height=3, width=5)
ggsave("plot_pcoa_wunifrac_smoking_LDL.png", gg_pcoa_wunifrac_smoking_LDL, height=2, width=5)
ggsave("plot_pcoa_wunifrac_nonsmoking_LDL.png", gg_pcoa_wunifrac_nonsmoking_LDL, height=2, width=5)
gg_pcoa_wunifrac_nonsmoking_LDL
gg_pcoa_wunifrac_smoking_LDL
gg_pcoa_wunifrac_nonsmoking_LDL
gg_pcoa_wunifrac_smoking_LDL
# Load packages
library(vegan)
library(phyloseq)
library(tidyverse)
# Load phyloseq object
load("phyloseq_object_final_highcount.RData")
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final), estimate_richness(phyloseq_object_final))
### PCoA Plot - Final Figure ###
# Beta Diversity figure panel will include Weighted Unifrac PCoA Plot of the smoker and LDL categories,
# divided into 2 plots, one with smokers only and the other with nonsmokers only
## Filter smokers only and nonsmokers only ##
view(sample_data(phyloseq_object_final_highcount))
phyloseq_object_smoking <- subset_samples(phyloseq_object_final_highcount, smoker == "Yes")
phyloseq_object_nonsmoking <- subset_samples(phyloseq_object_final_highcount, smoker == "No")
## Generate PCoA plots using weighted unifrac ##
ord.weighted_unifrac_smoking <- ordinate(phyloseq_object_smoking, method="PCoA", distance="unifrac", weighted=TRUE)
ord.weighted_unifrac_nonsmoking <- ordinate(phyloseq_object_nonsmoking, method="PCoA", distance="unifrac", weighted=TRUE)
gg_pcoa_wunifrac_smoking_LDL <- plot_ordination(phyloseq_object_smoking, ord.weighted_unifrac_smoking, color = "LDL_category") +
labs(col="LDL category") + stat_ellipse(type = "norm")#smoking-LDL
gg_pcoa_wunifrac_nonsmoking_LDL <- plot_ordination(phyloseq_object_final, ord.weighted_unifrac_nonsmoking, color = "LDL_category") +
labs(col="LDL category") + stat_ellipse(type = "norm")#nonsmoking-LDL
# Load phyloseq object
load("phyloseq_object_final_highcount.RData")
gg_pcoa_wunifrac_nonsmoking_LDL <- plot_ordination(phyloseq_object_nonsmoking, ord.weighted_unifrac_nonsmoking, color = "LDL_category") +
labs(col="LDL category") + stat_ellipse(type = "norm")#nonsmoking-LDL
gg_pcoa_wunifrac_smoking_LDL
gg_pcoa_wunifrac_nonsmoking_LDL
### Save plots ###
setwd("/Users/saman/Desktop/micb475-project2/pcoa_plots/beta_diversity")
ggsave("plot_pcoa_wunifrac_smoking_LDL.png", gg_pcoa_wunifrac_smoking_LDL, height=2, width=5)
ggsave("plot_pcoa_wunifrac_nonsmoking_LDL.png", gg_pcoa_wunifrac_nonsmoking_LDL, height=2, width=5)
setwd("/Users/saman/Desktop/micb475-project2")
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final, weighted=TRUE)#weighted unifrac
### PERMANOVA (Permutational ANOVA) ####
# Use phyloseq to calculate distance matrix
dm_weighted_unifrac <- UniFrac(phyloseq_object_final_highcount, weighted=TRUE)#weighted unifrac
# permanova: smoker-LDL_category
adonis2(dm_weighted_unifrac ~ `smoker`*LDL_category, data=samp_dat_wdiv)#weighted unifrac
samp_dat_wdiv <- data.frame(sample_data(phyloseq_object_final_highcount), estimate_richness(phyloseq_object_final_highcount))
# permanova: smoker-LDL_category
adonis2(dm_weighted_unifrac ~ `smoker`*LDL_category, data=samp_dat_wdiv)#weighted unifrac
=======
library(DESeq2)
#load phyloseq data
load("phyloseq_object_final.RData") #do phyloseq final
setwd("C:/Users/aweso/OneDrive - The University Of British Columbia/Documents/GitHub/micb475-project2")
load("phyloseq_object_final.RData") #do phyloseq final
#filter to smoking or non smoking
phylo_smoking = subset_samples(phyloseq_object_final, smoker == "Yes")
################################################################ CHRIS ADDED
taxa_info = as.data.frame(tax_table(phylo_smoking))
taxa_info$ASV = rownames(taxa_info)
################################################################
#add one to reads
phyloseq_object_final_plus1 <- transform_sample_counts(phylo_smoking, function(x) x+1)
phyloseq_object_final_deseq <- phyloseq_to_deseq2(phyloseq_object_final_plus1, ~LDL_category) #what category?
phyloseq_final <- DESeq(phyloseq_object_final_deseq)
# Make sure that the Healthy group is your reference group
res <- results(phyloseq_final, tidy=TRUE)
#################################################################################### CHRIS ADDED
#Change first column name from "row" to "ASV" beacuse thats what I did on line 18
colnames(res)[1] = "ASV"
View(res)
#Merge taxa information with "res"
res_with_taxa = inner_join(taxa_info,res, by = "ASV" )
#take significant hits
res_sig = res_with_taxa %>%
filter( padj<0.01 & abs(log2FoldChange)>2)
#Order by log2FC
res_sig <- res_sig[order(res_sig$log2FoldChange),]
#Make the plot
ggplot(data = res_sig, aes(y = reorder(Genus, -(as.numeric(log2FoldChange))), x = log2FoldChange, fill = pvalue))+
geom_col()
#Function to combined Pvalues
combine_pvalues = function(p){
return(1-pchisq(-2*sum(log(p),na.rm=T),2*sum(!is.na(p))))
}
#Merging the data for rows that have the same genus. Need to take the average for log2FC and combined the Pvalues
res_genus_combined = res_sig %>%
group_by(Genus) %>%
summarize(log2FoldChange_avg = mean(log2FoldChange), pvalues =  combine_pvalues(pvalue))
#Remove NAs
res_genus_combined = na.omit(res_genus_combined)
res_genus_combined <- res_genus_combined[order(res_genus_combined$log2FoldChange_avg),]
sighits = ggplot(data = res_genus_combined, aes(x= log2FoldChange_avg,y=reorder(Genus, -(as.numeric(log2FoldChange_avg))), fill = pvalues))+
geom_bar(stat = "identity") +
theme_bw()+
scale_fill_gradient(low = "yellow", high = "red", na.value = NA)
ggsave("smoking_LDL_phyloseq_DeSeq.png", sighits)
##########################################################################################
## Volcano plot: effect size VS significance
ggplot(res) + #show number genes increasing/decreasing abundance compared to no group
geom_point(aes(x=log2FoldChange, y=-log10(padj))) #mising values due to NAs
## Make variable to color by whether it is significant + large change
vol_plot <- res %>%
mutate(significant = padj<0.01 & abs(log2FoldChange)>2) %>% #new column in results table
ggplot() +
geom_point(aes(x=log2FoldChange, y=-log10(padj), col=significant))
vol_plot
ggsave(filename="vol_plot.png",vol_plot)
sighits
load("phyloseq_object_final.RData") #do phyloseq final
#filter to smoking or non smoking
phylo_smoking = subset_samples(phyloseq_object_final, smoker == "Yes")
################################################################ CHRIS ADDED
taxa_info = as.data.frame(tax_table(phylo_smoking))
taxa_info$ASV = rownames(taxa_info)
################################################################
#add one to reads
phyloseq_object_final_plus1 <- transform_sample_counts(phylo_smoking, function(x) x+1)
phyloseq_object_final_deseq <- phyloseq_to_deseq2(phyloseq_object_final_plus1, ~LDL_category) #what category?
phyloseq_final <- DESeq(phyloseq_object_final_deseq)
# Make sure that the Healthy group is your reference group
res <- results(phyloseq_final, tidy=TRUE)
#################################################################################### CHRIS ADDED
#Change first column name from "row" to "ASV" beacuse thats what I did on line 18
colnames(res)[1] = "ASV"
View(res)
#Merge taxa information with "res"
res_with_taxa = inner_join(taxa_info,res, by = "ASV" )
#take significant hits
res_sig = res_with_taxa %>%
filter( padj<0.01 & abs(log2FoldChange)>2)
#Order by log2FC
res_sig <- res_sig[order(res_sig$log2FoldChange),]
#Make the plot
ggplot(data = res_sig, aes(y = reorder(Genus, -(as.numeric(log2FoldChange))), x = log2FoldChange, fill = pvalue))+
geom_col()
#Function to combined Pvalues
combine_pvalues = function(p){
return(1-pchisq(-2*sum(log(p),na.rm=T),2*sum(!is.na(p))))
}
#Merging the data for rows that have the same genus. Need to take the average for log2FC and combined the Pvalues
res_genus_combined = res_sig %>%
group_by(Genus) %>%
summarize(log2FoldChange_avg = mean(log2FoldChange), pvalues =  combine_pvalues(pvalue))
#Remove NAs
res_genus_combined = na.omit(res_genus_combined)
#Remove g__
res_genus_combined$Genus = gsub("g__", "",data = deseq2results$Genus)
View(res_genus_combined)
View(res_genus_combined)
res_genus_combined$Genus = gsub("g__", "",res_genus_combined = deseq2results$Genus)
res_genus_combined$Genus = gsub("g__", "",res_genus_combined = res_genus_combined$Genus)
res_genus_combined$Genus = gsub("g__", "",data = res_genus_combined$Genus)
res_genus_combined$Genus = gsub("g__", "",data = res_genus_combined$Genus)
res_genus_combined$Genus <- gsub("g__", "", res_genus_combined$Genus)
res_genus_combined <- res_genus_combined[order(res_genus_combined$log2FoldChange_avg),]
sighits = ggplot(data = res_genus_combined, aes(x= log2FoldChange_avg,y=reorder(Genus, -(as.numeric(log2FoldChange_avg))), fill = pvalues))+
geom_bar(stat = "identity") +
theme_bw()+
scale_fill_gradient(low = "yellow", high = "red", na.value = NA)
res_genus_combined
sighits
ggsave("smoking_LDL_phyloseq_DeSeq.png", sighits)
##########################################################################################
## Volcano plot: effect size VS significance
ggplot(res) + #show number genes increasing/decreasing abundance compared to no group
geom_point(aes(x=log2FoldChange, y=-log10(padj))) #mising values due to NAs
## Make variable to color by whether it is significant + large change
vol_plot <- res %>%
mutate(significant = padj<0.01 & abs(log2FoldChange)>2) %>% #new column in results table
ggplot() +
geom_point(aes(x=log2FoldChange, y=-log10(padj), col=significant))
vol_plot
ggsave(filename="vol_plot.png",vol_plot)
sighits
res_genus_combined = na.omit(res_genus_combined)
#Remove g__
res_genus_combined$Genus <- gsub("g__", "", res_genus_combined$Genus)
res_genus_combined <- res_genus_combined[order(res_genus_combined$average_log2FoldChange)]
sighits
res_genus_combined <- res_genus_combined[order(res_genus_combined$average_log2FoldChange)]
res_genus_combined = res_sig %>%
group_by(Genus) %>%
summarize(log2FoldChange_avg = mean(log2FoldChange), pvalues =  combine_pvalues(pvalue))
#Remove NAs
res_genus_combined = na.omit(res_genus_combined)
#Remove g__
res_genus_combined$Genus <- gsub("g__", "", res_genus_combined$Genus)
res_genus_combined <- res_genus_combined[order(res_genus_combined$log2FoldChange_avg),]
sighits = ggplot(data = res_genus_combined, aes(x= log2FoldChange_avg,y=reorder(Genus, -(as.numeric(log2FoldChange_avg))), fill = pvalues))+
geom_bar(stat = "identity") +
theme_bw()+
scale_fill_gradient(low = "yellow", high = "red", na.value = NA)
res_genus_combined <- res_genus_combined[order(res_genus_combined$log2FoldChange_avg),]
sighits = ggplot(data = res_genus_combined, aes(x= log2FoldChange_avg,y=reorder(Genus, -(as.numeric(log2FoldChange_avg))), fill = pvalues))+
geom_bar(stat = "identity") +
theme_bw()+
scale_fill_gradient(low = "yellow", high = "red", na.value = NA) +
labs(x = "Average Log2 Fold Change", y = "Genus")
sighits
ggsave("smoking_LDL_phyloseq_DeSeq.png", sighits)
ggplot(res) + #show number genes increasing/decreasing abundance compared to no group
geom_point(aes(x=log2FoldChange, y=-log10(padj))) #mising values due to NAs
## Make variable to color by whether it is significant + large change
vol_plot <- res %>%
mutate(significant = padj<0.01 & abs(log2FoldChange)>2) %>% #new column in results table
ggplot() +
geom_poi
ggplot(res) + #show number genes increasing/decreasing abundance compared to no group
geom_point(aes(x=log2FoldChange, y=-log10(padj))) #mising values due to NAs
## Make variable to color by whether it is significant + large change
vol_plot <- res %>%
mutate(significant = padj<0.01 & abs(log2FoldChange)>2) %>% #new column in results table
ggplot() +
geom_point(aes(x=log2FoldChange, y=-log10(padj), col=significant))
vol_plot
vol_plot <- res %>%
mutate(significant = padj<0.01 & abs(log2FoldChange)>2) %>% #new column in results table
ggplot() +
geom_point(aes(x=log2FoldChange, y=-log10(padj), col=significant)) +
labs(x = "Log2 Fold Change", y = "-Log10 (padj)")
vol_plot
ggsave(filename="vol_plot.png",vol_plot)
>>>>>>> Stashed changes
